<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.bitbucket.askllc.fermenter</groupId>
	<version>1.0.0</version>
	<artifactId>root</artifactId>
	<packaging>pom</packaging>

	<name>Fermenter</name>
	<description>
		In brewing, a fermenter is a vessel in which unfinished ingredients become nearly finished beer. 
		In Model Driven Architecture, Fermenter is a project that converts functional concepts into nearly finished
		applications. This approach allows for the quick definition and assembly of applications with the focus on 
		functional concepts rather than technical underpinnings. Fermenter is an MDA engine that allows common 
		concepts to be modeled and spawn any number of generated source files. In turn, this allows developers
		to focus more time on business logic, less time on technical underpinnings, and achieve extremely high levels
		of architectural conformity.  
	</description>
	<url>https://bitbucket.org/askllc/fermenter</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Ryan Ashcraft</name>
			<email>ryan@cpointe-inc.com</email>
			<organization>Counterpointe Solutions Inc.</organization>
			<organizationUrl>http://www.cpointe-inc.com</organizationUrl>
		</developer>
		<developer>
			<name>Eric Konieczny</name>
			<email>ekonieczny@cpointe-inc.com</email>
			<organization>Counterpointe Solutions Inc.</organization>
			<organizationUrl>http://www.cpointe-inc.com</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:ssh://git@bitbucket.org/askllc/Fermenter.git</connection>
		<developerConnection>scm:git:ssh://git@bitbucket.org/askllc/Fermenter.git</developerConnection>
		<url>https://bitbucket.org/askllc/fermenter/</url>
	  <tag>1.0.0</tag>
  </scm>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<modules>
		<module>fermenter-mda</module>
		<module>stout</module>
		<module>cider</module>
	</modules>

	<properties>
		<argLine>-Xms256m -Xmx512m</argLine>
		<krausening.version>3</krausening.version>
		<jackson.version>1.9.13</jackson.version>
		<jacoco.it.execution.data.file>${project.build.directory}/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.test.execution.data.file>${project.build.directory}/jacoco.exec</jacoco.test.execution.data.file>
		<jacoco.version>0.7.4.201502262128</jacoco.version>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<resteasy.version>3.0.8.Final</resteasy.version>
		<slf4j.version>1.7.5</slf4j.version>
		<test.reports.localtion>${project.build.directory}/surefire-reports</test.reports.localtion>
		<weld.version>2.1.2.Final</weld.version>
		<wildfly.version>8.2.1.Final</wildfly.version>
		<arquillian.version>1.1.5.Final</arquillian.version>
		<arquillian.rest.extension.version>1.0.0.Alpha3</arquillian.rest.extension.version>
		<!-- With jacoco, all arquillian parameters need to be on the argument line: -->
		<wildfly.argline>${argLine} -Djboss.socket.binding.port-offset=10000
			-DKRAUSENING_BASE=${project.basedir}/src/test/resources/krausening/base
			-DKRAUSENING_EXTENSTIONS=${project.basedir}/src/test/resources/krausening/extensions</wildfly.argline>
		<wildfly.location>${project.basedir}/target/wildfly-${wildfly.version}</wildfly.location>
		<sonar.sources>./src</sonar.sources>
		<!-- The following sonar properties need to be defined in your settings.xml 
			file for sonar to run properly: sonar.host.url, sonar.login, sonar.password, 
			sonar.jdbc.url, sonar.jdbc.username, sonar.jdbc.password -->
	</properties>

	<repositories>
		<repository>
			<id>jbossPublic</id>
			<name>JBoss Public</name>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>osgeo-geotools</id>
			<url>http://download.osgeo.org/webdav/geotools</url>
		</repository>
		<repository>
			<id>hibernate-spatial</id>
			<url>http://www.hibernatespatial.org/repository</url>
		</repository>
	</repositories>

	<build>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>false</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/arquillian.xml</include>
				</includes>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.googlecode.maven-java-formatter-plugin</groupId>
					<artifactId>maven-java-formatter-plugin</artifactId>
					<version>0.4</version>
					<executions>
						<execution>
							<goals>
								<goal>format</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<compilerSource>1.7</compilerSource>
						<compilerCompliance>1.7</compilerCompliance>
						<compilerTargetPlatform>1.7</compilerTargetPlatform>
						<lineEnding>LF</lineEnding>
						<configFile>eclipse-java-standards-with-tabs-formatter.xml</configFile>
						<sourceDirectory>${project.basedir}/src/generated/java</sourceDirectory>
						<testSourceDirectory>${project.basedir}/src/test/generated/java</testSourceDirectory>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>${project.groupId}</groupId>
							<artifactId>stout-build-tools</artifactId>
							<version>${project.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.18.1</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<systemPropertyVariables>
							<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
							<jboss.home>${wildfly.location}</jboss.home>
							<module.path>${wildfly.location}/modules</module.path>
							<KRAUSENING_BASE>${project.basedir}/src/test/resources/krausening/base</KRAUSENING_BASE>
							<KRAUSENING_EXTENSIONS>${project.basedir}/src/test/resources/krausening/extensions</KRAUSENING_EXTENSIONS>
						</systemPropertyVariables>
						<reuseForks>false</reuseForks>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-gitexe</artifactId>
							<version>1.9.5</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.bitbucket.askllc.krausening</groupId>
				<artifactId>krausening</artifactId>
				<version>${krausening.version}</version>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>7.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>jsr250-api</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-7.0</artifactId>
				<version>1.0.0.Final</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${jackson.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jackson-provider</artifactId>
				<version>${resteasy.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jaxrs</artifactId>
				<version>${resteasy.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-cdi</artifactId>
				<version>${resteasy.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- For Unit Testing -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-rest-warp-bom</artifactId>
				<version>${arquillian.rest.extension.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.wildfly</groupId>
				<artifactId>wildfly-arquillian-container-managed</artifactId>
				<version>${wildfly.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-rest-client-api</artifactId>
				<version>${arquillian.rest.extension.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-rest-client-impl-2x</artifactId>
				<version>${arquillian.rest.extension.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonarqube</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>default-prepare-agent-integration</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
								<configuration>
									<destFile>${jacoco.it.execution.data.file}</destFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.core</artifactId>
					<version>${jacoco.version}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-jacoco</artifactId>
					<version>1.0.0.Alpha8</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>ossrh-deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.4</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>disable-java8-doclint</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<!-- NB JDK 8 Javadoc linter is very strict, so deactivate it if we're using Java 8 -->
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
			<properties>
				<additionalparam>-Xdoclint:none</additionalparam>
			</properties>
		</profile>
	</profiles>
</project>
