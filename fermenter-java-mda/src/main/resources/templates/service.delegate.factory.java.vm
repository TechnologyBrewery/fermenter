package ${basePackage}.service.delegate;

import org.bitbucket.fermenter.service.Service;
import org.bitbucket.fermenter.service.delegate.AbstractServiceDelegateFactory;

public class ServiceDelegateFactory extends AbstractServiceDelegateFactory {

	private static ServiceDelegateFactoryInterface getServiceDelegateFactory() {
		return (ServiceDelegateFactoryInterface) AbstractServiceDelegateFactory.getAbstractServiceDelegateFactory(ServiceDelegateFactory.class);
	}
	
	public static Service createService(String name) {
		return getServiceDelegateFactory().createServiceDelegate( name );
	}

	public static EntityMaintenanceServiceDelegate createEntityMaintenanceServiceDelegate() {
		return getServiceDelegateFactory().createEntityMaintenanceServiceDelegate();
	}

#foreach( $service in $serviceNames )
	/**
	 * Create a(n) ${service}ServiceDelegate instance
	 */
	public static ${service}ServiceDelegate create${service}ServiceDelegate() {
		return getServiceDelegateFactory().create${service}ServiceDelegate();
	}
	
#end
}