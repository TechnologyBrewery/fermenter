import { SortWrapper } from '../../shared/model/sort-wrapper.model';
import { Constants } from '../../constants';

/*******************************************************
 * Find By Example Criteria Model Base
 * This is used to specify criteria to find entities using the find by example maintenance service.
 * 
 * Generated Code - DO NOT MODIFY
 * Template = find-by-example-criteria-base.model.ts.vm
 *******************************************************/
export class FindByExampleCriteriaBase<T> {

  /** The example element used as the example to match/find against. */
  public probe: T;

  /** Whether or not match exactly, or use contains when searching. */
  public containsMatch: boolean;

  /** Zero based page index (i.e. page 0 out of 100). */
  public startPage: number;

  /** The number of elements to search for. */
  public count: number;

  /** How the results will be sorted. */
  public sortWrapper: SortWrapper;

  // NOTE that this is never constructed from a http call response, 
  // thus the constructor is setup to be able to easily create the object on the frontend
  constructor(sortWrapper: SortWrapper, probe?: T, containsMatch?: boolean, startPage?: number, count?: number) {
    this.sortWrapper = sortWrapper;

    if (probe) {
      this.probe = probe;
    }

    if(containsMatch) {
        this.containsMatch = true;
    } else {
        this.containsMatch = false;
    }

    if (startPage) {
      this.startPage = startPage;
    } else {
      // start with the first page if no page is supplied
      this.startPage = 0;
    }

    if (count) {
      this.count = count;
    } else {
      const constants = new Constants();
      this.count = constants.DEFAULT_PAGE_SIZE;
    }
  }
}
