package org.technologybrewery.fermenter.cookbook.domain.transfer.json;

import java.util.Date;

import org.technologybrewery.fermenter.cookbook.domain.bizobj.SimpleDomainBO;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Transfer object JSON contract for the SimpleDomain application entity.
 * 
 * Developers should insert any needed JSON serialization logic here for member variables or methods that are not
 * automatically generated by Fermenter but defined directly in {@link SimpleDomainBO}
 *
 * A simple domain with one (generated) id field, fields of different types, and two sample queries.
 * 
 * @see org.technologybrewery.fermenter.cookbook.domain.transfer.json.SimpleDomainBaseMixIn
 *
 *      GENERATED STUB CODE - PLEASE *DO* MODIFY
 *
 */
public abstract class SimpleDomainMixIn extends SimpleDomainBaseMixIn {

	/**
	 * Serialization logic for persistent attributes that are manually added by developers to {@link SimpleDomainBO}.
	 */
	@JsonIgnore
	private String largeString;

	/**
	 * updatedAt is a computed property that should be present in serialized JSON payloads but cannot be set via
	 * de-serialization
	 */
	@JsonIgnoreProperties(allowGetters = true)
	private Date updatedAt;
}
