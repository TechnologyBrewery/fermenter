/*******************************************************
 * Page Wrapper Model Base
 * 
 * Generated Code - DO NOT MODIFY
 * Template = page-wrapper-base.model.ts.vm
 *******************************************************/
export class PageWrapperBase<T> {

  /** The objects being requested. */
  public content: Array<T>;

  /** The page size that was requested. This may be different from the number of elements returned (numberOfElements). */
  public itemsPerPage: number;

  /** The number of elements returned. This may be different from the number of elements requested (itemsPerPage). */
  public numberOfElements: number;

  /** The page number. I.e. this is page X out of 100. */
  public startPage: number;

  /** The total number of pages. */
  public totalPages: number;

  /** The total number of elements in the entire dataset. */
  public totalResults: number;

  /** Whether or not this is the first page. */
  public first: boolean;

  /** Whether or not this is the last page. */
  public last: boolean;


  constructor(pageWrapperBase?: PageWrapperBase<T>) {
    if (pageWrapperBase) {
      this.itemsPerPage = pageWrapperBase.itemsPerPage;
      this.startPage = pageWrapperBase.startPage;
      this.totalPages = pageWrapperBase.totalPages;
      this.totalResults = pageWrapperBase.totalResults;
      this.first = pageWrapperBase.first;
      this.last = pageWrapperBase.last;
      this.numberOfElements = pageWrapperBase.numberOfElements;

      // NOTE: we do not parse the content here as we can't effectively create new abstract objects of type T
    }
  }
}
