package ${basePackage}.client.resource;

import feign.Headers;
import feign.Param;
import feign.RequestLine;
import javax.ws.rs.core.MediaType;

#foreach( $import in $service.imports )
import $import;
#end

import org.technologybrewery.fermenter.stout.service.ValueServiceResponse;
import org.technologybrewery.fermenter.stout.service.VoidServiceResponse;
import org.technologybrewery.fermenter.stout.page.PageWrapper;

/**
 * Resource for ${service.name} client.
 *
 * Generated Code - DO NOT MODIFY
 *
 * Generated from: ${templateName}
 */
public interface ${service.name}Resource {
#foreach( $operation in $service.operations )
	#if($operation.transactionAttribute == "SUPPORTS")
		#set ($restOperation = 'GET')
	#else
		#set ($restOperation = 'POST')
	#end

	/**
	#if ($operation.documentation)
	 * ${operation.documentation}
	#else
	 * Execute the ${operation.name} operation.
	#end
	 *
	#if( !$operation.parameters.isEmpty() )
		#foreach( $parameter in $operation.parameters )
			#if( $parameter.documentation )
	 * @param ${parameter.name} ${parameter.documentation}
			#else
	 * @param ${parameter.name}
			#end
		#end
	#end
	#if($operation.return.isMany())
	 * @return A service response-wrapped {@link Collection>} of {@link ${operation.returnManyType}}
	#elseif(!$operation.isResponseTypeVoid())
	 * @return A service response-wrapped instance of {@link ${operation.return.javaType}}
	#else
	 * @return An empty service response
	#end
	 */
	@RequestLine("${restOperation} /${service.name}Service/#if($restOperation == "POST" && ($operation.getParameters().size() == 1) && ($entities.get($operation.getParameters().get(0).type)))${operation.getLowercaseName()}#else${operation.restStylePath}#end")
	#if($operation.hasEntityParameters() || $operation.transactionAttribute != "SUPPORTS")
	@Headers({"Content-Type: " + MediaType.APPLICATION_JSON })
	#end
	#if($operation.return.isPagedResponse())
	ValueServiceResponse<PageWrapper<${operation.return.javaType}>> ${operation.uncapitalizedName}(${operation.getSignatureParametersWithFeign()});
    #elseif($operation.return.isMany())
	ValueServiceResponse<Collection<${operation.return.javaType}>> ${operation.uncapitalizedName}(${operation.getSignatureParametersWithFeign()});
	#elseif($operation.isResponseTypeVoid())
	public VoidServiceResponse ${operation.uncapitalizedName}(${operation.getSignatureParametersWithFeign()});
	#else 
	ValueServiceResponse<${operation.return.javaType}> ${operation.uncapitalizedName}(${operation.getSignatureParametersWithFeign()});
	#end

#end

}
