package ${basePackage}.transfer.json;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.datatype.hibernate5.Hibernate5Module;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Sort;
import org.bitbucket.fermenter.stout.messages.DefaultMessage;
import org.bitbucket.fermenter.stout.messages.DefaultMessages;
import org.bitbucket.fermenter.stout.messages.Message;
import org.bitbucket.fermenter.stout.messages.Messages;
import org.bitbucket.fermenter.stout.messages.json.MessageDeserializer;
import org.bitbucket.fermenter.stout.messages.json.MessageSerializer;
import org.bitbucket.fermenter.stout.messages.json.MessagesMixIn;
import org.bitbucket.fermenter.stout.page.json.PageDeserializer;
import org.bitbucket.fermenter.stout.page.json.PageMixIn;
import org.bitbucket.fermenter.stout.page.json.PageSerializer;
import org.bitbucket.fermenter.stout.page.json.SortDeserializer;
import org.bitbucket.fermenter.stout.transfer.PageResponse;

import ${basePackage}.bizobj.*;
import ${basePackage}.transfer.json.*;

/**
 * Manages and customizes the Jackson {@link ObjectMapper} instance for this project.
 */
public final class ObjectMapperManager {

	private final static Logger LOGGER = LoggerFactory.getLogger(ObjectMapperManager.class);
	
	private static ObjectMapper objectMapper;
	
	static {
		objectMapper = new ObjectMapper();
		configureObjectMapper();
	}
	
	private ObjectMapperManager() {
		//prevent instantiation
	}
	
	/**
	 * Adds in any custom modules desired for this project's {@link ObjectMapper}.
	 */
	private static void configureObjectMapper() {
		SimpleModule module = new SimpleModule();
#foreach( $entity in $entities )		
		module.setMixInAnnotation(${entity.name}BO.class, ${entity.name}MixIn.class);
#end

		module.addAbstractTypeMapping(Page.class, PageResponse.class);
		module.setMixInAnnotation(Page.class, PageMixIn.class);
		module.addSerializer(Page.class, new PageSerializer());
		module.addDeserializer(Page.class, new PageDeserializer());
		module.addDeserializer(Sort.class, new SortDeserializer());

		module.addAbstractTypeMapping(Messages.class, DefaultMessages.class);
		module.setMixInAnnotation(Messages.class, MessagesMixIn.class);
		module.setMixInAnnotation(DefaultMessages.class, MessagesMixIn.class);
		module.addSerializer(Message.class, new MessageSerializer(ObjectMapperManager.class));
		module.addDeserializer(Message.class, new MessageDeserializer());
		
		objectMapper.registerModule(module);
		objectMapper.registerModule(new Hibernate5Module());
	}
	
	/**
	 * Returns the thread-safe, singleton instance of {@link ObjectMapper} for this project.
	 * @return object mapper
	 */
	public static ObjectMapper getObjectMapper() {
		return objectMapper;
	}
	
}
