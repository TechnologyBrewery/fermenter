<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated from: ${templateName} -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">    
    
    <context:annotation-config/>
		
	<!-- Enable AspectJ style of Spring AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true">
	     <aop:include name="messagesAspect"/>
	</aop:aspectj-autoproxy>
	
    <!-- Allows Spring to wire up and instantiate business services marked with @Service -->
	<context:component-scan base-package="${basePackage}.service">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
	
	<context:component-scan base-package="org.technologybrewery.fermenter.stout.messages">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    
 	<context:component-scan base-package="${basePackage}.persist">
        <context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
    </context:component-scan>
    
 	<context:component-scan base-package="org.technologybrewery.fermenter.stout.config">
        <context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
    </context:component-scan>
    
    <context:component-scan base-package="org.technologybrewery.fermenter.stout.authn">
        <context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
    </context:component-scan>
     
	<bean name="messagesAspect" class="org.technologybrewery.fermenter.stout.messages.MessagesAspect" />
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	
	<bean id="contextHolder" class="org.technologybrewery.fermenter.stout.util.SpringApplicationContextHolder"/>
	
	<!-- Enables business services to be injected with an instance of Messages that is instantiated 
		 per web request. Request scoped Spring beans require the configuration of a 
		 org.springframework.web.context.request.RequestContextListener in the application's web.xml or if
		 operating in a unit test, the test class should be marked with 
		 a @org.springframework.test.context.web.WebAppConfiguration annotation
	  -->
	<bean id="requestScopedMessages" class="org.technologybrewery.fermenter.stout.messages.Messages" scope="request">
		<aop:scoped-proxy/>
    </bean>

</beans>
