import { FermenterMessage } from '../../shared/model/fermenter-message.model';

/*******************************************************
 * Fermenter Response Model Base
 *
 * Generated Code - DO NOT MODIFY
 * Template = fermenter-response-base.model.ts.vm
 *******************************************************/
export class FermenterResponseBase<T> {
  public messages: FermenterMessage[] = new Array<FermenterMessage>();
  public value: T;

  constructor(response?: FermenterResponseBase<T>) {
    if (response) {
      if (response.messages) {
        for (const message of response.messages) {
          this.messages.push(new FermenterMessage(message));
        }
      }
      if (response.value) {
        this.value = response.value;
      }
    }
  }

  hasMessages(): boolean {
    return this.messages.length > 0;
  }

  hasErrorMessages(): boolean {
    let hasErrors = false;
    for (const message of this.messages) {
      if (message.severity === 'ERROR') {
        hasErrors = true;
      }
    }
    return hasErrors;
  }
}
