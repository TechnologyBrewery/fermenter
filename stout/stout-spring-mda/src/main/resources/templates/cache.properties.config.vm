package ${basePackage}.client.config;

import org.aeonbits.owner.KrauseningConfig;

/**
 * Contains rest client property configuration.
 * 
 * Generated Code - DO NOT MODIFY
 *
 * Generated from ${templateName}
 */
@KrauseningConfig.KrauseningSources("rest-client-caching.properties")
public interface CachePropertiesConfig extends KrauseningConfig {

    @Key("cache.timeout.minutes")
    @DefaultValue("10")
    int getCacheTimeoutMinutes();

    @Key("cache.max.size.per.bo")
    @DefaultValue("1000")
    int getCacheMaxSizePerBO();
    
    /**
     * Fully qualified class name that implements {@link org.bitbucket.fermenter.stout.client.service.CustomFlushOrderProvider}
     * to customize the order in which entities are flushed by the level 1 rest client cache.  The values provided via
     * this class will be prioritized and then blended with the generated flushed order.
     *
     * @return fully qualified class name
     */
    @Key("custom.flush.order.provider")
    String getCustomFlushOrderProvider();
    

#foreach ($entity in $entities)
	#if (!$entity.isTransient() && !$entity.isNonPersistentParentEntity())
    @Key("${entity.name.toLowerCase()}.caching.enabled")
    @DefaultValue("false")
    boolean is${entity.name}CachingEnabled();
	#end
#end

}
