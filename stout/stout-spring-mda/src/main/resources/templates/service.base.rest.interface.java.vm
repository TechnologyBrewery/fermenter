package ${basePackage}.service.rest;

#foreach( $import in $service.imports )
import $import;
#end

import ${basePackage}.bizobj.*;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import java.math.BigDecimal;
import org.jboss.resteasy.annotations.cache.NoCache;

import org.technologybrewery.fermenter.stout.service.ValueServiceResponse;
import org.technologybrewery.fermenter.stout.service.VoidServiceResponse;
import org.technologybrewery.fermenter.stout.page.PageWrapper;

/**
 * Interface for the ${service.name} service.
 *
 * Generated Code - DO NOT MODIFY
 * 
 * Generated from: ${templateName}
 */
public interface ${service.name}BaseService {

#foreach( $operation in $service.operations )

	/**
	#if ($operation.documentation)
	 * ${operation.documentation}
	#else
	 * Execute the ${operation.name} operation.
	#end
	 *
	#if( !$operation.parameters.isEmpty() )
		#foreach( $parameter in $operation.parameters )
			#if( $parameter.documentation )
	 * @param ${parameter.name} ${parameter.documentation}
			#else
	 * @param ${parameter.name}  
			#end
		#end
	#end
    #if($operation.return.isPagedResponse())
     * @return A service response-paged {@link Collection>} of {@link ${operation.return.javaType}}
	#elseif($operation.return.isMany())
	 * @return A service response-wrapped {@link Collection>} of {@link ${operation.return.javaType}}
	#elseif(!$operation.isResponseTypeVoid())	 
	 * @return A service response-wrapped instance of {@link ${operation.return.javaType}}
	#else
	 * @return An empty service response
	#end
	 */
	#if($operation.transactionAttribute == "SUPPORTS")
	@GET 
	@NoCache
	#else
	@POST
	#end
	@Path("${operation.uncapitalizedName}")
	@Produces("application/json;charset=${operation.return.responseEncoding}")
	#if($operation.isCompressedWithGzip())
    @GZIP
    #end
	#if($operation.hasEntityParameters())
	@Consumes(MediaType.APPLICATION_JSON)
	#end
	#if($operation.return.isPagedResponse())
    ValueServiceResponse<PageWrapper<${operation.return.javaType}>> ${operation.uncapitalizedName}(${operation.getSignatureParametersWithJaxRS()});
	#elseif($operation.return.isMany())
	ValueServiceResponse<Collection<${operation.return.javaType}>> ${operation.uncapitalizedName}(${operation.getSignatureParametersWithJaxRS()});
	#elseif($operation.isResponseTypeVoid())
	public VoidServiceResponse ${operation.uncapitalizedName}(${operation.getSignatureParametersWithJaxRS()});
	#else 
	ValueServiceResponse<${operation.return.javaType}> ${operation.uncapitalizedName}(${operation.getSignatureParametersWithJaxRS()});
	#end

#end

}
