package ${basePackage}.service.ejb;

#foreach( $import in $service.imports )
import $import;
#end

import javax.ejb.Local;

import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.PUT;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;

import org.tigris.atlas.service.ValueServiceResponse;
import org.tigris.atlas.service.VoidServiceResponse;

/**
 * Interface for the ${service.name} service.
 *
 * Generated Code - DO NOT MODIFY
 */
@Local
@Path("/")
public interface ${service.name}Service {

#foreach( $operation in $service.operations )
	/**
	#if ($operation.documentation)
	 * ${operation.documentation}
	#else
	 * Execute the ${operation.name} operation.
	#end
	 *
	#if( $operation.parameters.size() > 0 )
		#foreach( $parameter in $operation.parameters )
			#if( $parameter.documentation )
	 * @param ${parameter.name} ${parameter.documentation}
			#else
	 * @param ${parameter.name}  
			#end
		#end
	#end
	#if($operation.isReturnTypeCollection())	 
	 * @return A service response-wrapped {@link Collection>} of {@link ${operation.returnManyType}}
	#elseif($operation.isReturnTypeEntity())	 
	 * @return A service response-wrapped instance of {@link ${operation.returnManyType}}
	#else
	 * @return An empty service response
	#end
	 */
	#if($operation.isReturnTypeCollection())	 
	ValueServiceResponse<Collection<${operation.returnManyType}>> ${operation.lowercaseName}(${operation.signature});
	#elseif($operation.isReturnTypeEntity())	 
	ValueServiceResponse<${operation.returnType}> ${operation.lowercaseName}(${operation.signature});
	#else 
	VoidServiceResponse ${operation.lowercaseName}(${operation.signature});
	#end

#end

}