package ${basePackage}.enumeration;

import org.apache.commons.lang3.StringUtils;

/**
 * Enumeration ${enumeration.name}.
 * 
 * Generated Code - DO NOT MODIFY
 *
 */ 
public enum ${enumeration.name} {

#foreach ($enum in $enumeration.enumList)
	#if($enumeration.isNamed() == false)		
	${enum.uppercasedName}() {
		@Override public int getValue() { 
			return ${enum.value};
		}
	}#if ($foreach.isLast());#else,#end
	#else
	${enum.uppercasedName}#if ($foreach.isLast());#else,#end
	#end 
#end

#if ($enumeration.isNamed() == false)  
   	/**
   	 * Gets the underlying value associated with this ${enumeration.name} enum instance.
   	 * @return underlying value associated with this ${enumeration.name} enum instance.
   	 */
   	public abstract int getValue();
   	
#end

    /**
     * Provides a case-insensitive version of valueOf(), which can be helpful when the 
     * enumeration value is a string coming from another technology (e.g., json transported
     * from a non-Java user interface).
     * @param value The value that should represent an enumerated value
     * @return The enumerated value that matches the value
     */
    public static ${enumeration.name} valueOfIgnoresCase(String value) {
    	String upperCaseValue = (StringUtils.isNotBlank(value)) ? value.toUpperCase().replace(" ", "_") : null;
    	return (upperCaseValue != null) ? ${enumeration.name}.valueOf(upperCaseValue) : null;
    	
    }
	
}
