package ${basePackage}.service.ejb;

#foreach( $import in $service.imports )
import $import;
#end

import javax.annotation.Resource;

import javax.ejb.Local;
import javax.ejb.SessionContext;
import javax.ejb.Stateless;
import javax.ejb.TransactionAttribute;
import javax.ejb.TransactionAttributeType;

import org.tigris.atlas.service.ValueServiceResponse;
import org.tigris.atlas.service.VoidServiceResponse;

/**
 * Service session bean for the ${service.name} service.
 *
 * Generated Code - DO NOT MODIFY
 */
 @Local(${service.name}Service.class)
 @Stateless 
public abstract class ${service.name}BaseService implements ${service.name}Service {

	@Resource
	protected SessionContext sessionContext;	

#foreach( $operation in $service.operations )
	/**
	 * {@inheritDoc}
	 */
	@TransactionAttribute(TransactionAttributeType.${operation.transactionAttribute})
	#if($operation.isReturnTypeCollection())	 
	public final ValueServiceResponse<Collection<${operation.returnManyType}>> ${operation.lowercaseName}(${operation.signature}) {
	#elseif($operation.isReturnTypeEntity())	 
	public final ValueServiceResponse<${operation.returnType}> ${operation.lowercaseName}(${operation.signature}) {
	#else 
	public final VoidServiceResponse ${operation.lowercaseName}(${operation.signature}) {
	#end
	#if($operation.isReturnTypeCollection())
		ValueServiceResponse<Collection<${operation.returnManyType}>> response = new ValueServiceResponse<Collection<${operation.returnManyType}>>();		
	#elseif($operation.isReturnTypeEntity())	
		ValueServiceResponse<${operation.returnType}> response = new ValueServiceResponse<${operation.returnType}>();
	#else 
		VoidServiceResponse response = new VoidServiceResponse();
	#end
		
		//TODO: handle messages
		
		//TODO: transform TOs to BOs
		
		//TODO: call underlying method 
		
		//TODO: transform BOs to TOs
		
		//TODO: check if transaction needs to be rolled back

		return response;

	}
 
#end

}