package ${basePackage}.service.ejb;

#foreach( $import in $service.imports )
import $import;
#end

#foreach($entity.name in $entities)
import ${basePackage}.transfer.${entity.name};
import ${basePackage}.transfer.${entity.name}PK;
import ${basePackage}.service.${entity.name}ServiceResponse;
#end

import javax.ejb.CreateException;
import javax.ejb.EJBException;
import javax.ejb.SessionBean;
import javax.ejb.SessionContext;

import ${basePackage}.service.ServiceFactory;
import ${basePackage}.service.EntityMaintenanceService;

/**
 * Service session bean for the EntityMaintenance service
 *
 * Generated Code - DO NOT MODIFY
 */
public class EntityMaintenanceServiceBean implements SessionBean {

	protected SessionContext sessionContext = null;

	/**
	 * Get a service instance
	 */ 
	private EntityMaintenanceService getEntityMaintenanceService() {
		
		return ServiceFactory.createEntityMaintenanceService();
	}	

#foreach( $entity in $entities )

	/**
	 * Save the ${entity.name}
	 *
	 * @param entity ${entity.name} to save
	 * @return ${entity.name}ServiceResponse The saved ${entity.name} container
	 */
	public ${entity.name}ServiceResponse save(${entity.name} entity) {
		return getEntityMaintenanceService().save(entity);
	}
	 
	/**
	 * Delete the ${entity.name}
	 *
	 * @param entity ${entity.name} to delete
	 * @return ${entity.name}ServiceResponse The deleted ${entity.name} container
	 */
	public ${entity.name}ServiceResponse delete(${entity.name}PK pk) {
		return getEntityMaintenanceService().delete(pk);
	}

	/**
	 * Find the ${entity.name} by primary key fields
	 *
	 * @param pk The primary key for the ${entity.name}
	 * @return ${entity.name}ServiceResponse The retrieved ${entity.name} container
	 */
	public ${entity.name}ServiceResponse findByPrimaryKey(${entity.name}PK pk) {
		return getEntityMaintenanceService().findByPrimaryKey(pk);
	}
	
#end 
	public void ejbCreate() throws CreateException {
	}

	/**
	 * @see javax.ejb.SessionBean#ejbActivate()
	 */
	public void ejbActivate() throws EJBException {
	}


	/**
	 * @see javax.ejb.SessionBean#ejbPassivate()
	 */
	public void ejbPassivate() throws EJBException {
	}


	/**
	 * @see javax.ejb.SessionBean#ejbRemove()
	 */
	public void ejbRemove() throws EJBException {		
	}


	/**
	 * @see javax.ejb.SessionBean#setSessionContext(javax.ejb.SessionContext)
	 */
	public void setSessionContext(SessionContext ctx) throws EJBException {
		sessionContext = ctx;			
	}

}