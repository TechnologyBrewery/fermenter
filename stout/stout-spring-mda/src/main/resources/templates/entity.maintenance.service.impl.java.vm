package ${basePackage}.service.impl;

#foreach( $import in $service.imports )
import $import;
#end

import ${basePackage}.bizobj.${entity.name}BO;
import ${basePackage}.service.rest.${entity.name}MaintenanceService;

import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import org.bitbucket.fermenter.stout.messages.AbstractMsgMgrAwareService;
import org.bitbucket.fermenter.stout.messages.DefaultMessages;

import org.bitbucket.fermenter.stout.service.ValueServiceResponse;
import org.bitbucket.fermenter.stout.service.VoidServiceResponse;

/**
 * Concrete implementation for create, retrieve, update, and delete (CRUD) functionality 
 * for ${entity.name} business objects.
 *
 * Generated Code - DO NOT MODIFY
 */
@Service 
public class ${entity.name}MaintenanceServiceImpl extends AbstractMsgMgrAwareService implements ${entity.name}MaintenanceService {

#if ( !$entity.idFields.isEmpty() )
  #set ($idFieldJavaType = ${entity.idFields.values().iterator().next().javaType})
  #set ($idFieldName = ${entity.idFields.values().iterator().next().name})
#else
  #set ($idFieldJavaType = 'String')
  #set ($idFieldName = 'id')
#end  
		
	@Inject
	private DefaultMessages messages;
		
	/**
	 * {@inheritDoc}
	 */
	@Transactional(propagation=Propagation.REQUIRED)
	@Override
	public ValueServiceResponse<${entity.name}BO> saveOrUpdate(${idFieldJavaType} ${idFieldName}, ${entity.name}BO entity) {
		entity.setKey($idFieldName);
		return saveOrUpdate(entity);
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Transactional(propagation=Propagation.REQUIRED)
	@Override
	public ValueServiceResponse<${entity.name}BO> saveOrUpdate(${entity.name}BO entity) {
		initMsgMgr(messages);
		${entity.name}BO persistedEntity = entity.save();
		ValueServiceResponse<${entity.name}BO> response = new ValueServiceResponse<${entity.name}BO>(persistedEntity);
		addAllMsgMgrToResponse(response);
		return response;
	}
	
	/**
	 * {@inheritDoc}
	 */
	@Transactional(propagation=Propagation.REQUIRED)
	@Override
	public VoidServiceResponse delete(${idFieldJavaType} ${idFieldName}) {
		initMsgMgr(messages);
		${entity.name}BO entityToDelete = ${entity.name}BO.findByPrimaryKey(${idFieldName});
		if (entityToDelete != null) {
			entityToDelete.delete();
		}
		VoidServiceResponse response = new VoidServiceResponse();
		addAllMsgMgrToResponse(response);
		return response;
	}	
	 	
	/**
	 * {@inheritDoc}
	 */
	@Transactional(propagation=Propagation.SUPPORTS)
	@Override
	public ValueServiceResponse<${entity.name}BO> findByPrimaryKey(${idFieldJavaType} ${idFieldName}) {
		initMsgMgr(messages);
		${entity.name}BO retrievedEntity = ${entity.name}BO.findByPrimaryKey(${idFieldName} #if (!$entity.relations.isEmpty()), true#end);
		ValueServiceResponse<${entity.name}BO> response = new ValueServiceResponse<${entity.name}BO>(retrievedEntity);
		addAllMsgMgrToResponse(response);
		return response;
	}	

}